<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.tracom.mapper.VD0100.VD0100Mapper">

<!-- <select id="VD0100G0R0" resultType="Map">
	SELECT 			A.VHC_ID
					,A.COMP_ID
					,B.COMP_NM
					,A.AREA
					,A.VHC_NO
					,A.CHAS_NO
					,A.MAKER
					,DATE_FORMAT(A.RELS_DT, '%Y-%m-%d') RELS_DT
					,A.MODEL_NM
					,A.VHC_KIND
					,A.ROUT_TYPE
					,A.VHC_TYPE
					,A.VHC_FUEL
					,A.VHC_STS
					,A.PSG_CNT
					,A.SPARE_YN
					,A.SCRAP_YN
					,A.APPL_ST_DT
					,A.APPL_ED_DT
					,A.USE_YN
					,A.REMARK
					
					
	FROM			BMS_VHC_MST	A
	LEFT JOIN	  	BMS_TRANSCOMP_MST B
	ON				A.COMP_ID = B.COMP_ID 		
	
	<where>	
		<if test="TYPE == 'ALL' and CONTENT != null and CONTENT != ''">
			VHC_ID LIKE CONCAT('%',#{CONTENT},'%') || VHC_NO LIKE CONCAT('%',#{CONTENT},'%') 
		</if>
		<if test="TYPE == 'VHC_NO'">
			VHC_NO LIKE CONCAT('%',#{CONTENT},'%')
		</if>
		<if test="TYPE == 'VHC_ID'">
			VHC_ID LIKE CONCAT('%',#{CONTENT},'%') 
		</if>
	</where>
</select> -->
	
<select id="VD0100SHI0" resultType="Map">
	SELECT			VHC_ID
					,VHC_NO	
	FROM			BMS_VHC_MST
</select>
	
<select id="VD0100SHI1" resultType="Map">
	SELECT			PARTNER_ID
					,PARTNER_NM
	FROM	  		BMS_PARTNER_MST
	
	WHERE			PARTNER_DIV = "PD008"
</select>	
	
<select id="VD0100G0R0" resultType="Map">
	SELECT 			VH.VHC_ID
					,VH.VHC_NO
					,VH.VHC_KIND
					,A.DVC_ID
					,A.MAKER
					,F.DL_CD_NM AS MAKER_NM
					,A.TRNS_TYPE
					,G.DL_CD_NM AS TRNS_TYPE_NM
					,A.DVC_KIND
					,D.DL_CD_NM AS DVC_KIND_NM
					,A.DVC_COORDS
					,A.INST_LOC
					,E.DL_CD_NM AS INST_LOC_NM
					,A.LEVEL
					,A.PARENT_ID
					,A.DVC_IP
					,A.MNG_ID	
					,A.USE_YN
					,A.CTR_YN
					,A.CLSFCTN_ID
					,A.REMARK
					,D.DL_CD_NM AS DVC_KIND_NM
					,CONCAT(D.DL_CD_NM, '(', E.DL_CD_NM, ')') AS DVC_KIND_NM_LOC
	FROM			
	BMS_VHC_MST VH
	LEFT JOIN	 	BMS_VHC_DVC_CMPSTN VD
	ON				VH.VHC_ID = VD.VHC_ID
	LEFT JOIN	 	BMS_DVC_INFO A
	ON				VD.DVC_ID = A.DVC_ID
	LEFT JOIN		BMS_DL_CD_INFO D
	ON				A.DVC_KIND = D.DL_CD AND D.CO_CD = 'DVC_KIND'
	LEFT JOIN		BMS_DL_CD_INFO E
	ON				A.INST_LOC = E.DL_CD AND E.CO_CD = 'INST_LOC'
	LEFT JOIN		BMS_DL_CD_INFO F
	ON				A.MAKER = F.DL_CD AND F.CO_CD = 'MAKER'
	LEFT JOIN		BMS_DL_CD_INFO G
	ON				A.TRNS_TYPE = G.DL_CD AND G.CO_CD = 'TRNS_TYPE'
	<where>	
		A.DVC_ID IS NOT NULL
		AND 1 = 1
		<if test="TYPE == 'ALL' and CONTENT != null and CONTENT != ''">
			AND VH.VHC_ID LIKE CONCAT('%',#{CONTENT},'%') || VH.VHC_NO LIKE CONCAT('%',#{CONTENT},'%') 
		</if>
		<if test="TYPE == 'VHC_NO'">
			AND VH.VHC_NO LIKE CONCAT('%',#{CONTENT},'%')
		</if>
		<if test="TYPE == 'VHC_ID'">
			AND VH.VHC_ID LIKE CONCAT('%',#{CONTENT},'%') 
		</if>
	</where>
	
ORDER BY
	VH.VHC_ID, A.DVC_ID
	
	<!-- SELECT			A.DVC_ID
				,	A.MAKER
				,	A.DVC_KIND
				,	A.TRNS_TYPE
				,	A.MNG_ID
				,	A.PARENT_ID
				,	A.LEVEL
				,	A.INST_LOC
				,	A.DVC_COORDS
				,	A.CLSFCTN_ID
				,	A.DVC_IP
				,	A.FILE_NM
				,	A.DEV_SERIAL_NO
				,	A.MODEL_NM
				,   DATE_FORMAT(A.INST_DT, '%Y-%m-%d') INST_DT
				,   DATE_FORMAT(A.BUY_DT, '%Y-%m-%d') BUY_DT
				,	A.CTR_YN
				,	A.USE_YN
				,	A.REMARK
				,	A.UPD_DTM
				,	A.UPD_ID
				,	F.DL_CD_NM AS MAKER_NM
				,	G.DL_CD_NM AS TRNS_TYPE_NM
				,	D.DL_CD_NM AS DVC_KIND_NM
			
	FROM			BMS_VHC_MST VH
	LEFT JOIN	 	BMS_VHC_DVC_CMPSTN VD
	ON				VH.VHC_ID = VD.VHC_ID
	LEFT JOIN	 	BMS_DVC_INFO A
	ON				VD.DVC_ID = A.DVC_ID
	LEFT JOIN		BMS_DL_CD_INFO D
	ON				A.DVC_KIND = D.DL_CD AND D.CO_CD = 'DVC_KIND'
	LEFT JOIN		BMS_DL_CD_INFO F
	ON				A.MAKER = F.DL_CD AND F.CO_CD = 'MAKER'
	LEFT JOIN		BMS_DL_CD_INFO G
	ON				A.MAKER = G.DL_CD AND G.CO_CD = 'TRNS_TYPE'
		
	WHERE			A.DVC_ID IS NOT NULL -->			
</select>

<select id="VD0100G0K0" resultType="Map">
	SELECT CONCAT('DV', LPAD(NEXTVAL(SEQ_BMS_DVC_INFO_0), 8, '0')) AS 'SEQ'
</select>

<insert id="VD0100G0I0" parameterType="Map">
	insert into BMS_DVC_INFO( DVC_ID,MAKER,DVC_KIND,TRNS_TYPE,MNG_ID,PARENT_ID
	,LEVEL,INST_LOC,DVC_COORDS,DVC_IP,USE_YN,REMARK,UPD_DTM,UPD_ID )
	VALUES (#{DVC_ID},#{MAKER},#{DVC_KIND},#{TRNS_TYPE},#{MNG_ID},#{PARENT_ID}
	,#{LEVEL},#{INST_LOC},#{DVC_COORDS},#{DVC_IP},#{USE_YN},#{REMARK},#{UPD_DTM},#{SSN_USER_ID});
					
	INSERT INTO BMS_VHC_DVC_CMPSTN( VHC_ID,DVC_ID ) values(#{VHC_ID} , #{DVC_ID} );

	INSERT INTO BMS_DVC_PARAM_INFO( DVC_ID,DVC_KIND,PARAM_DIV,PARAM_KIND,MNG_ID,DATA_TYPE
		,DATA_LENGTH,DATA_VAL,ATTR1_VAL,ATTR2_VAL,SCHEDULE_YN,USE_YN,AUTO_YN,REMARK,UPD_DTM,UPD_ID )
	SELECT #{DVC_ID},DVC_KIND,PARAM_DIV,PARAM_KIND,#{MNG_ID},DATA_TYPE,DATA_LENGTH,DATA_VAL,ATTR1_VAL,ATTR2_VAL
		,SCHEDULE_YN,USE_YN,AUTO_YN,REMARK,#{UPD_DTM},#{SSN_USER_ID}
	FROM SM_DVC_PARAM_CFG_INFO WHERE USE_YN = 'Y' AND DVC_KIND = #{DVC_KIND}
						
</insert>

<update id="VD0100G0U0" parameterType="Map">
	UPDATE			BMS_DVC_INFO
	SET				
					MAKER = #{MAKER}
					,DVC_KIND = #{DVC_KIND}
					,TRNS_TYPE = #{TRNS_TYPE}
					,DVC_COORDS = #{DVC_COORDS}
					,INST_LOC = #{INST_LOC}
					,LEVEL = #{LEVEL}
					,PARENT_ID = #{PARENT_ID}
					,DVC_IP = #{DVC_IP}
					,MNG_ID = #{MNG_ID}	
					,USE_YN = #{USE_YN}
					,CTR_YN = #{CTR_YN}
					,REMARK = #{REMARK}
					,UPD_DTM = #{UPD_DTM}
					,UPD_ID = #{SSN_USER_ID}
					,CLSFCTN_ID	= #{CLSFCTN_ID}
					
	WHERE			DVC_ID = #{DVC_ID};
	
	UPDATE
		BMS_DVC_PARAM_INFO
	SET
		 MNG_ID = #{MNG_ID}
	WHERE
		DVC_ID = #{DVC_ID};			
		
	UPDATE
		BMS_DVC_CUR_STATUS_PARAM_INFO
	SET
		 MNG_ID = #{MNG_ID}
	WHERE
		DVC_ID = #{DVC_ID};
					 	
					 	
					 	
</update>

<delete id="VD0100G0D0" parameterType="Map">
	DELETE FROM BMS_VHC_DVC_CMPSTN
	WHERE			VHC_ID = #{VHC_ID} AND DVC_ID = #{DVC_ID};
	
	DELETE FROM 	BMS_DVC_INFO
	WHERE			DVC_ID = #{DVC_ID};
</delete>


<!-- plf 테이블에 삽입 20211018 jh //추후 동적 처리가 필요함-->
<insert id="VD0100G0I2" parameterType="Map">
	INSERT INTO SM_DVC_MNG_INFO ( CH_ID
								,  MNG_ID
								, MNG_NM
								, DVC_KIND
								, TRNS_TYPE
								, USE_YN
								, REMARK
								)
	VALUES (
			(SELECT CH_ID FROM SM_COM_CH_MST )
			, #{MNG_ID}
			, (SELECT VHC_NO FROM BMS_VHC_MST WHERE VHC_ID = #{VHC_ID})
			, #{DVC_KIND}
			, #{TRNS_TYPE}
			, 'Y'
			,''
	)
	ON DUPLICATE KEY UPDATE
	MNG_NM		= VALUES(MNG_NM)
	, DVC_KIND	= VALUES(DVC_KIND)
	, TRNS_TYPE	= VALUES(TRNS_TYPE);
	
	INSERT INTO SM_COM_SESS_INFO (
								  CH_ID
								, SESS_ID
                                , SESS_NM
                                , SESS_IP
                                , REMOTE_TYPE
                                , ELAPSED_TIME
                                , IN_PACKET
                                , OUT_PACKET
                                )
	VALUES(
			  (SELECT CH_ID FROM SM_COM_CH_MST )
			, #{MNG_ID}
			, (SELECT VHC_NO FROM BMS_VHC_MST WHERE VHC_ID = #{VHC_ID})
			, '-'
			, ''
			, '0'
			, '0'
			, '0'
		)
		ON DUPLICATE KEY UPDATE
		SESS_ID		= VALUES(SESS_ID)
		, SESS_NM	= VALUES(SESS_NM);
</insert>

<!-- plf 테이블 업데이트 20211018 jh -->
<update id="VD0100G0U2" parameterType="Map">
	UPDATE
		SM_DVC_MNG_INFO
	SET
		MNG_ID = #{MNG_ID}
		, DVC_KIND = #{DVC_KIND}
		, TRNS_TYPE = #{TRNS_TYPE}
		<!-- , IMP_TYPE = '' -->
	WHERE
		MNG_NM = (SELECT VHC_NO FROM BMS_VHC_MST WHERE VHC_ID = #{VHC_ID});
		
	UPDATE
		SM_COM_SESS_INFO
	SET
		  SESS_ID = #{MNG_ID}
		<!-- , REMOTE_TYPE = '' -->
	WHERE
		SESS_NM = (SELECT VHC_NO FROM BMS_VHC_MST WHERE VHC_ID = #{VHC_ID});
</update>

<!-- plf 테이블 삭제 20211018 jh -->
<delete id="VD0100G0D2" parameterType="Map">
	DELETE FROM SM_DVC_MNG_INFO
	WHERE MNG_ID = #{MNG_ID};
	
	DELETE FROM SM_COM_SESS_INFO
	WHERE SESS_ID = #{MNG_ID};
</delete>

</mapper>