<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.tracom.mapper.AL0202.AL0202Mapper">
	<select id="AL0202G0R0" resultType="Map">
	SELECT A.ALLOC_ID,
		A.ALLOC_NM,
		A.ALLOC_ENM,
		A.ROUT_GRP,
		RD.DL_CD_NM ROUT_GRP_NM,
		<!-- AGA.ALLOC_GRP,
		AG.DL_CD_NM AS ALLOC_GRP_NM,
		RGA.ROUT_GRP,
		RG.DL_CD_NM AS ROUT_GRP_NM, -->
		A.DAY_DIV,
		DD.DL_CD_NM DAY_DIV_NM,
		A.WAY_DIV,
		WD.DL_CD_NM WAY_DIV_NM,
		A.ST_STTN_ID,
		A.ED_STTN_ID,
		A.OPER_CNT,
		A.ALLOC_CNT,
		A.FST_TM,
		A.LST_TM,
		A.AM_PEAK_ST_TM,
		A.AM_PEAK_ED_TM,
		A.PM_PEAK_ST_TM,
		A.PM_PEAK_ED_TM,
		A.AM_PEAK,
		A.PM_PEAK,
		A.NONE_PEAK,
		A.REMARK,
		A.UPD_DTM,
		A.UPD_ID
	FROM BMS_ALLOC_OPER_MST A
		<!-- LEFT JOIN BMS_ROUT_GRP_ALLOC_CMPSTN RGA
		ON A.ALLOC_ID = RGA.ALLOC_ID
		LEFT JOIN BMS_DL_CD_INFO RG
		ON RGA.ROUT_GRP = RG.DL_CD AND RG.CO_CD = 'ROUT_GRP'
		LEFT JOIN BMS_ALLOC_GRP_ALLOC_CMPSTN AGA
		ON A.ALLOC_ID = AGA.ALLOC_ID
		LEFT JOIN BMS_DL_CD_INFO AG
		ON AGA.ALLOC_GRP = AG.DL_CD AND AG.CO_CD = 'ALLOC_GRP' -->
		LEFT JOIN BMS_DL_CD_INFO DD
		ON A.DAY_DIV= DD.DL_CD AND DD.CO_CD = 'DAY_DIV'
		LEFT JOIN BMS_DL_CD_INFO WD
		ON A.WAY_DIV= WD.DL_CD AND WD.CO_CD = 'WAY_DIV'
		LEFT JOIN BMS_DL_CD_INFO RD
		ON A.ROUT_GRP= RD.DL_CD AND RD.CO_CD = 'ROUT_GRP'

	<where>
		AND DEL_YN != 'Y'
		<if test="@kr.tracom.util.CommonUtil@notEmpty(CONTENT)">
			<if test="TYPE == 'ALL'||TYPE == ''">
				AND (A.ALLOC_ID LIKE CONCAT('%',#{CONTENT},'%') || A.ALLOC_NM LIKE CONCAT('%',#{CONTENT},'%'))
			</if>
			<if test="TYPE == 'ALLOC_ID'">
				AND A.ALLOC_ID LIKE CONCAT('%',#{CONTENT},'%')
			</if>
			<if test="TYPE == 'ALLOC_NM'">
				AND A.ALLOC_NM LIKE CONCAT('%',#{CONTENT},'%') 
			</if>
		</if>
	</where>
		ORDER BY A.ALLOC_ID, A.DAY_DIV
	</select>
	
	<select id="AL0202G0R1" resultType="Map">
		SELECT		A.ALLOC_ID
				,	C.ALLOC_NM
				,	A.ALLOC_NO
				,	A.SN
				,	A.OPER_SN
				,	A.ROUT_ID
				,	B.ROUT_NM
				,	B.WAY_DIV
				,	WD.DL_CD_NM	WAY_DIV_NM
				,	A.COR_ID
				,	A.ROUT_ST_TM
				,	A.ROUT_ED_TM
				,	A.REST_TM
				,	A.VHC_ID
				,	A.DRV_ID
				,	A.UPD_DTM
				,	A.UPD_ID
		FROM		BMS_OPER_ALLOC_PL_ROUT_INFO A
		LEFT JOIN	BMS_ROUT_MST B
		ON			A.ROUT_ID = B.ROUT_ID
		LEFT JOIN 	BMS_DL_CD_INFO WD
		ON 			B.WAY_DIV = WD.DL_CD 
		AND			WD.CO_CD = 'WAY_DIV'	
		LEFT JOIN 	BMS_ALLOC_OPER_MST C
		ON			A.ALLOC_ID = C.ALLOC_ID
		
		<where>
			<if test="@kr.tracom.util.CommonUtil@notEmpty(CONTENT)">
				<if test="TYPE == 'ALL'||TYPE == ''">
					(A.ALLOC_ID LIKE CONCAT('%',#{CONTENT},'%') || C.ALLOC_NM LIKE CONCAT('%',#{CONTENT},'%'))
				</if>
			</if>
		</where>
		GROUP BY  ALLOC_ID, ALLOC_NO
		ORDER BY  ALLOC_ID, ALLOC_NO
	</select>	

	<select id="AL0202G1R0" resultType="Map">
		<!-- 06/22 테이블 수정후 쿼리 -->
		SELECT		A.ALLOC_ID
				,	A.SN
				,	A.ALLOC_NO
				,	A.OPER_SN
				,	A.ROUT_ID
				,	B.ROUT_NM
				,	B.WAY_DIV
				,	WD.DL_CD_NM	WAY_DIV_NM
				,	A.COR_ID
				,	A.ROUT_ST_TM
				,	A.ROUT_ED_TM
				,	A.REST_TM
				,	A.VHC_ID
				,	A.DRV_ID
				,	A.UPD_DTM
				,	A.UPD_ID
		FROM		BMS_OPER_ALLOC_PL_ROUT_INFO A
		LEFT JOIN	BMS_ROUT_MST B
		ON			A.ROUT_ID = B.ROUT_ID
		LEFT JOIN 	BMS_DL_CD_INFO WD
		ON 			B.WAY_DIV = WD.DL_CD 
		AND			WD.CO_CD = 'WAY_DIV'	
		WHERE A.ALLOC_ID = #{ALLOC_ID}
		ORDER BY ALLOC_NO, STR_TO_DATE(ROUT_ST_TM, '%H:%i')
	<!-- 수정전
		SELECT A.ALLOC_ID,
	       A.ROUT_ID,
	       RM.ROUT_NM,
	       A.DAY_DIV,
	       DD.DL_CD_NM DAY_DIV_NM,
		   A.WAY_DIV,
		   WD.DL_CD_NM WAY_DIV_NM,
	       A.OPER_SN,
	       A.ALLOC_NO,
	       A.COR_ID,
	       A.ALLOC_NM,
	       A.ROUT_ST_TM,
	       A.ROUT_ED_TM,
	       A.REST_TM,
	       A.UPD_DTM,
	       A.UPD_ID
	  FROM BMS_OPER_ALLOC_PL_ROUT_INFO A
		LEFT JOIN BMS_ROUT_MST RM
		ON A.ROUT_ID= RM.ROUT_ID
		LEFT JOIN BMS_DL_CD_INFO DD
		ON A.DAY_DIV= DD.DL_CD AND DD.CO_CD = 'DAY_DIV'
		LEFT JOIN BMS_DL_CD_INFO WD
		ON A.WAY_DIV= WD.DL_CD AND WD.CO_CD = 'WAY_DIV'
	  WHERE A.ALLOC_ID = #{ALLOC_ID}
	  ORDER BY ALLOC_NO, OPER_SN -->
			
		<!-- 차량과 운전자까지 가져오는 쿼리
		SELECT A.ROUT_GRP,
			A.ROUT_ID,
			A.DAY_DIV,
			A.WAY_DIV,
			A.OPER_SN,
			A.ALLOC_NO,
			A.COR_ID,
			A.REST_TM,
			A.ROUT_ST_TM,
			A.ROUT_ED_TM,
			A.UPD_DTM,
			A.UPD_ID,
			B.ROUT_GRP_NM,
			B.WAY_ASC_NM,
			B.WAY_DESC_NM,
			C.ROUT_NM,
			D.COR_NM,
			D.COR_COLOR
			,F.VHC_ID
			,F.VHC_NO
			,H.DRV_ID
			,H.DRV_NM
		FROM BMS_OPER_ALLOC_PL_ROUT_INFO A
			INNER JOIN BMS_ROUT_GRP_MST B
				ON A.ROUT_GRP = B.ROUT_GRP
			LEFT OUTER JOIN BMS_ROUT_MST C
				ON A.ROUT_ID = C.ROUT_ID AND C.DEL_YN != 'Y'
			LEFT OUTER JOIN BMS_COR_MST D
				ON A.COR_ID = D.COR_ID 
			LEFT JOIN BMS_ALLOC_PL_VHC_INFO E
				ON A.ROUT_GRP = E.ROUT_GRP
				AND A.DAY_DIV = E.DAY_DIV
				AND A.ALLOC_NO = E.ALLOC_NO
				AND A.WAY_DIV = E.WAY_DIV
			LEFT JOIN BMS_VHC_MST F
				ON E.VHC_ID = F.VHC_ID
			LEFT JOIN BMS_ALLOC_PL_DRV_INFO G
				ON A.ROUT_GRP = G.ROUT_GRP
				AND A.DAY_DIV = G.DAY_DIV
				AND A.ALLOC_NO = G.ALLOC_NO 
			LEFT JOIN BMS_DRV_MST H
				ON G.DRV_ID = H.DRV_ID
		WHERE A.ROUT_GRP = #{ROUT_GRP}
			AND A.DAY_DIV = #{DAY_DIV}
			ORDER BY ROUT_GRP, DAY_DIV, ALLOC_NO, OPER_SN -->
	</select>
		
	
	<select id="AL0202G1CNT" resultType="Map">
		SELECT COUNT(*) CNT
		FROM BMS_OPER_ALLOC_PL_ROUT_INFO A
	  	WHERE A.ALLOC_ID = #{ALLOC_ID}
		GROUP BY ALLOC_ID, ALLOC_NO 
		ORDER BY ALLOC_ID, ALLOC_NO 

	</select>
	
	<select id="AL0202G0K0" resultType="Map">
		SELECT CONCAT('AL', LPAD(NEXTVAL(SEQ_BMS_ALLOC_OPER_MST_0), 8, '0')) AS 'SEQ'
	</select>
	
	<select id="AL0202G1K0" resultType="Map">
		SELECT NEXTVAL(SEQ_BMS_OPER_ALLOC_PL_ROUT_INFO_0) AS 'SEQ'
	</select>
	
	<select id="AL0202P0R0" resultType="Map">
	    SELECT  COR_ID,
				ROUT_GRP,
				COR_NM
	
	      FROM   BMS_COR_MST
<!-- 	      ON      A.ROUT_GRP = B.ROUT_GRP INNER JOIN BMS_ROUT_MST C
	      ON      A.ROUT_ID = C.ROUT_ID 
	      WHERE   A.ROUT_GRP = #{ROUT_GRP}
	      AND     A.DAY_DIV = #{DAY_DIV} -->
	</select>	
	
	<select id="AL0202P1R0" resultType="Map">
		SELECT  A.ROUT_GRP,
				A.ROUT_ID,
				B.ROUT_NM,
				A.OPER_SN,
				A.ROUT_ST_TM,
				A.ROUT_ED_TM
				
		FROM	BMS_OPER_PL_ROUT_INFO A INNER JOIN BMS_ROUT_MST B
		ON		A.ROUT_GRP = B.ROUT_GRP AND B.DEL_YN != 'Y'
		WHERE	B.ROUT_GRP = #{ROUT_GRP}
	</select>
	
	<select id="selectCorCnt" resultType="Map">
		SELECT
			COUNT(*) AS CNT
			,COR_ID
		FROM
			BMS_COR_DTL_INFO
		GROUP BY
			COR_ID
	</select>
	
	<insert id="AL0202G1I0" parameterType="Map">
		<selectKey resultType="string" keyProperty="SN" order="BEFORE">
        	SELECT IFNULL(MAX(SN)+1,1) FROM BMS_OPER_ALLOC_PL_ROUT_INFO  WHERE  ALLOC_ID = #{ALLOC_ID}
    	</selectKey>    
    
		INSERT INTO 	BMS_OPER_ALLOC_PL_ROUT_INFO
						(
						ALLOC_ID,
						SN,
						ALLOC_NO,
						OPER_SN,
						ROUT_ID,
						COR_ID,
						ROUT_ST_TM,
						ROUT_ED_TM,
						REST_TM,
						VHC_ID,
						DRV_ID,
						UPD_DTM,
						UPD_ID
						)
		VALUES			
						(
						#{ALLOC_ID},
						#{SN},
						#{ALLOC_NO},
						#{OPER_SN},
						#{ROUT_ID},
						#{COR_ID},
						#{ROUT_ST_TM},
						#{ROUT_ED_TM},
						#{REST_TM},
						#{VHC_ID},
						#{DRV_ID},
						#{UPD_DTM},
						#{SSN_USER_ID}
						)
	</insert>
	
	<update id="AL0202G1U0" parameterType="Map">
		UPDATE 			BMS_OPER_ALLOC_PL_ROUT_INFO
		SET 			ALLOC_NO = #{ALLOC_NO},
						OPER_SN = #{OPER_SN},
						ROUT_ID = #{ROUT_ID},
						COR_ID = #{COR_ID},
						ROUT_ST_TM = #{ROUT_ST_TM},
						ROUT_ED_TM = #{ROUT_ED_TM},
						REST_TM = #{REST_TM},
						VHC_ID = #{VHC_ID},
						DRV_ID = #{DRV_ID},
						UPD_DTM = #{UPD_DTM},
						UPD_ID = #{SSN_USER_ID}
		WHERE			ALLOC_ID = #{ALLOC_ID} 
		AND				SN = #{SN} 
	</update>
	
	<delete id="AL0202G1D0" parameterType="Map">
		DELETE
		FROM			BMS_OPER_ALLOC_PL_NODE_INFO
		WHERE			ALLOC_ID = #{ALLOC_ID}
		AND				SN = #{SN};
	
	
		DELETE 
		FROM 			BMS_OPER_ALLOC_PL_ROUT_INFO
		WHERE 			ALLOC_ID = #{ALLOC_ID}
		AND 			SN = #{SN} 
	</delete>
	
	<delete id="AL0202G1DA0" parameterType="Map">
		DELETE FROM BMS_OPER_ALLOC_PL_NODE_INFO
		WHERE ALLOC_ID = #{ALLOC_ID}
		DELETE FROM BMS_OPER_ALLOC_PL_ROUT_INFO
		WHERE ALLOC_ID = #{ALLOC_ID}
	</delete>
	
	<insert id="AL0202G1I1" parameterType="Map">
		INSERT INTO BMS_OPER_ALLOC_PL_COR_INFO( ROUT_GRP,DAY_DIV,ALLOC_NO,COR_SN,COR_ID,WAY_DIV,UPD_DTM,UPD_ID )
		VALUES(#{ROUT_GRP},#{DAY_DIV},#{ALLOC_NO},#{COR_SN},#{COR_ID},#{WAY_DIV},#{UPD_DTM},#{SSN_USER_ID} )
	</insert>
	
	<update id="AL0202G1U1" parameterType="Map">\
	
	
	
		UPDATE BMS_OPER_ALLOC_PL_COR_INFO
		SET ROUT_GRP = #{ROUT_GRP}, DAY_DIV = #{DAY_DIV}, ALLOC_NO = #{ALLOC_NO}, COR_SN = #{COR_SN}, COR_ID = #{COR_ID}
			, WAY_DIV = #{WAY_DIV}, UPD_DTM = #{UPD_DTM}, UPD_ID = #{SSN_USER_ID}' 
		WHERE ROUT_GRP = #{ROUT_GRP} AND DAY_DIV = #{DAY_DIV} AND ALLOC_NO = #{ALLOC_NO} AND COR_SN = #{COR_SN}
	</update>

	<delete id="AL0202G1D1" parameterType="Map">
		DELETE FROM BMS_OPER_ALLOC_PL_COR_INFO
		WHERE ROUT_GRP = #{ROUT_GRP} AND DAY_DIV = #{DAY_DIV} AND ALLOC_NO = #{ALLOC_NO} AND COR_SN = #{COR_SN}
	</delete>

	<delete id="AL0202G1DA1" parameterType="Map">
		DELETE FROM BMS_OPER_ALLOC_PL_COR_INFO
		WHERE ROUT_GRP = #{ROUT_GRP} AND DAY_DIV = #{DAY_DIV}
	</delete>	
</mapper>